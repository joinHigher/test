js中有六种数据类型，包括五种基本数据类型（Number,String,Boolean,Null,Undefined）,和一种混合数据类型（Object）。

数组的方法: http://www.jb51.net/article/87930.htm


字符串的8种方法:


有个typeof  用来判断各种数据类型,有两种写法：typeof   xxx   ,typeof(xxx)

http://www.cnblogs.com/a546558309/p/3608194.html

JS 构造函数
//构造函数
 function Egperson (name,age) {
      this.name = name;
      this.age = age;
      this.sayName = function () {
         alert(this.name);
      }
  }
  var person = new Egperson('mike','18'); //this-->person
  person.sayName();  //'mike'

在js中，构造函数与普通函数的区别不是很大。接下来就主要讲讲两者的区别。

1.在命名规则上，构造函数一般是首字母大写，普通函数则是遵照小驼峰式命名法。

2.在函数调用时，

1）构造函数内部会创建一个实例，调用普通函数时则不会创建新的对象。

2）构造函数内部的this指向是新创建的person实例，而普通函数内部的this指向调用函数的对象（如果没有对象调用，默认为window）

3.javascript中构造函数是不需要有返回值的，这一点跟java很类似。可以认为构造函数和普通函数的最大差别就是：构造函数中没有return语句，
普通函数可以有return语句；构造函数中会使用this关键字定义成员变量和成员方法，普通的函数不会使用this关键字定义成员变量和方法。


js中的new()到底做了些什么？？  https://www.cnblogs.com/faith3/p/6209741.html

(1) 创建一个新对象；
(2) 将构造函数的作用域赋给新对象（因此 this 就指向了这个新对象） ；
(3) 执行构造函数中的代码（为这个新对象添加属性） ；
(4) 返回新对象。


call apply 用法：

猫吃鱼，狗吃肉，奥特曼打小怪兽。

有天狗想吃鱼了

猫.吃鱼.call(狗，鱼)

狗就吃到鱼了

猫成精了，想打怪兽

奥特曼.打小怪兽.call(猫，小怪兽)

就这样记住了。

obj.call(thisObj, arg1, arg2, ...);
obj.apply(thisObj, [arg1, arg2, ...]);



判断一个变量是不是Array
var a = {};var b = []
Object.prototype.toString.call(a);      // 输出为： "[object Object]"
Object.prototype.toString.call(a);      // 输出为： "[object Array]"

**************************************************************************

prototype _proto_  constractor 关系

http://www.cnblogs.com/xiaohuochai/p/5721552.html


原型  原型链


作用域  作用域链


事件   事件代理   事件冒泡



